##############################################################################
#
# This Makefile is meant to be used by an end user of CFML.
#
# We assume that CFML has been installed.
#
# The variable $(ML) is used to specify which .ml files we should build
# characteristic formulae for. (If undefined, all .ml files are used.)
#
# The variable $(ML_MAIN) is used to specify which source file is the
# starting point when compiling with ocamlbuild. It can remain undefined
# if there is only one .ml file.
#
# Optionally, $(OCAMLBUILD_FLAGS) can be set.
#
# Optionally, $(CFML_FLAGS) can be set (e.g. to "-debug").

##############################################################################
# Several auxiliary Makefiles are installed in this directory.

CFML := $(shell cfmlc -where)

##############################################################################

# We use a sequence intentionally, as it does not make much sense
# to proceed unless the previous phase was successful.

.PHONY: all clean
all:
	@ $(MAKE) phase1
	@ $(MAKE) phase2
	@ $(MAKE) phase3

##############################################################################
# Export all of our variables to sub-makes, e.g. CFML_FLAGS, OCAML_INCLUDE.

export

##############################################################################
# Phase 1. Compilation using OCaml.

ML := \
  $(filter-out myocamlbuild.ml,$(shell ls *.ml))

OCAML_INCLUDE := \
  -I .

ML_MAIN := \
  $(ML)

OCAMLBUILD := \
  ocamlbuild \
    -classic-display -use-ocamlfind \
    -cflags "-g" -lflags "-g" \
    -X .coq-native \
    $(OCAMLBUILD_FLAGS)

.PHONY: phase1
phase1:
	@ $(OCAMLBUILD) $(ML_MAIN:.ml=.native)

clean::
	@ $(OCAMLBUILD) -clean

##############################################################################
# Phase 2. Translation using CFML.

.PHONY: phase2
phase2:
	@ $(MAKE) -f $(CFML)/Makefile.cfml

clean::
	@ $(MAKE) -f $(CFML)/Makefile.cfml $@

##############################################################################
# Phase 3. Compilation using Coq.

# The _CoqProject file is generated.

# For this purpose, the user must set COQPATH and COQFLAGS appropriately.

include $(CFML)/Makefile.coqproject

.PHONY: phase3
phase3: _CoqProject
	@ $(MAKE) -f $(CFML)/Makefile.generic

clean::
	@ $(MAKE) -f $(CFML)/Makefile.generic $@
